cmake_minimum_required (VERSION 3.1)
project("ProfVis")

if (NOT IS_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/ext/nanogui/src")
    message(FATAL_ERROR "NanoGUI dependency repository (ext/nanogui) is missing! "
    "You probably did not clone the project with --recursive. It is possible to recover "
    "by calling \"git submodule update --init --recursive\"")
endif()

# C++11
set                     (CMAKE_CXX_STANDARD 11)

# NanoGUI
## Disable building extras we won't need (pure C++ project)
set                     (NANOGUI_BUILD_EXAMPLE OFF CACHE BOOL " " FORCE)
set                     (NANOGUI_BUILD_PYTHON  OFF CACHE BOOL " " FORCE)
set                     (NANOGUI_INSTALL       OFF CACHE BOOL " " FORCE)
set                     (NANOGUI_BUILD_SHARED  OFF CACHE BOOL " " FORCE)

add_subdirectory        (ext/nanogui)

## For reliability of parallel build, make the NanoGUI targets dependencies
set_property            (TARGET glfw glfw_objects nanogui PROPERTY FOLDER "dependencies")

## Various preprocessor definitions have been generated by NanoGUI
add_definitions         (${NANOGUI_EXTRA_DEFS})

## On top of adding the path to nanogui/include, you may need extras
include_directories     (ext/nanogui/include ${NANOGUI_EXTRA_INCS})

# fmt
add_subdirectory        (ext/fmt)

include_directories     (include)

add_executable          (profvis        src/profvis.cpp src/canvas.cpp)
target_link_libraries   (profvis        fmt nanogui ${NANOGUI_EXTRA_LIBS})
